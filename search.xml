<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Nodejs安装教程</title>
      <link href="/2023/07/29/nodejs-an-zhuang-jiao-cheng/"/>
      <url>/2023/07/29/nodejs-an-zhuang-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1>Nodejs</h1><h3 id="下载">下载</h3><p>下载地址：<a href="https://nodejs.org/zh-cn/download"> Node.js (nodejs.org)</a></p><img src="/images/Nodejs安装教程.assets/image-20230729135801511.png" alt="image-20230729135801511" style="zoom:80%;"><p>下载对应版本即可</p><h3 id="安装">安装</h3><p>选择安装路径：</p><img src="/images/Nodejs安装教程.assets/image-20230729140313138.png" alt="image-20230729140313138" style="zoom:80%;"><p>在任何位置打开终端输入<code>node -v</code>出现版本号表示安装成功，查看npm是否安装成功<code>npm -v</code></p><p><img src="/images/Nodejs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.assets/image-20230729140955297.png" alt=""></p><h4 id="问题">问题</h4><p>若未正常显示则需手动添加环境变量，搜索环境变量打开</p><img src="/images/Nodejs安装教程.assets/image-20230729141414602.png" alt="image-20230729141414602" style="zoom: 67%;"><img src="/images/Nodejs安装教程.assets/image-20230729141750966.png" alt="image-20230729141750966" style="zoom:67%;"><img src="/images/Nodejs安装教程.assets/image-20230729141718857.png" alt="image-20230729141718857" style="zoom:80%;"><p>进入编辑新建中添加刚刚的安装路径</p><img src="/images/Nodejs安装教程.assets/image-20230729141955472.png" alt="image-20230729141955472" style="zoom: 67%;"><h3 id="修改npm的下载位置">修改npm的下载位置</h3><p>在刚刚的安装路径下创建两个文件夹<code>ndoe_cache</code>和<code>node_global</code></p><p><img src="/images/Nodejs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.assets/image-20230729142502065.png" alt=""></p><p>设置全局模块的安装路径到 “node_global” 文件夹</p><pre class=" language-shell"><code class="language-shell">npm config set prefix "D:\nodejs\node_global"</code></pre><p>设置缓存到 “node_cache” 文件夹</p><pre class=" language-shell"><code class="language-shell">npm config set cache "D:\nodejs\node_cache"</code></pre><p>将全局模块安装路径添加到环境变量</p><img src="/images/Nodejs安装教程.assets/image-20230729142912612.png" alt="image-20230729142912612" style="zoom:67%;"><p>通过下面的命令查看是否修改成功</p><pre class=" language-shell"><code class="language-shell">npm get prefixnpm get cache</code></pre><p><img src="/images/Nodejs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.assets/image-20230729143203332.png" alt=""></p><h3 id="修改文件夹权限">修改文件夹权限</h3><p>修改<code>node_global</code>文件夹的权限编辑属性，</p><p>如果不进行这一步那么使用npm命令就必须使用<strong>管理员权限</strong>打开终端，才能使用<code>npm</code>命令</p><img src="/images/Nodejs安装教程.assets/image-20230729143628296.png" alt="image-20230729143628296" style="zoom: 80%;"><img src="/images/Nodejs安装教程.assets/image-20230729143639973.png" alt="image-20230729143639973" style="zoom: 80%;"><p>本文章参考自：<a href="https://blog.csdn.net/qq_42006801/article/details/124830995">Node.js安装与配置（详细步骤）_nodejs安装及环境配置</a></p><p>仅供自己留做存档用</p>]]></content>
      
      
      <categories>
          
          <category> ndoejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go后端框架</title>
      <link href="/2023/07/28/go-hou-duan-kuang-jia/"/>
      <url>/2023/07/28/go-hou-duan-kuang-jia/</url>
      
        <content type="html"><![CDATA[<h1>Go</h1><h2 id="Gin">Gin</h2><h3 id="安装gin">安装gin</h3><pre class=" language-shell"><code class="language-shell">go get -u github.com/gin-gonic/gin</code></pre><p>例子</p><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"github.com/gin-gonic/gin"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/index"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>context <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>context<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"你好，世界"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":9090"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"github.com/gin-gonic/gin"</span><span class="token keyword">func</span> <span class="token function">Index</span><span class="token punctuation">(</span>context <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>context<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"你好，世界"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/index"</span><span class="token punctuation">,</span> Index<span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":9090"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h2 id="Gorm">Gorm</h2><h3 id="连接数据库">连接数据库</h3><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"database/sql"</span><span class="token string">"fmt"</span><span class="token string">"gorm.io/driver/mysql"</span><span class="token string">"gorm.io/gorm"</span><span class="token string">"time"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 参考 https://github.com/go-sql-driver/mysql#dsn-data-source-name 获取详情</span>dsn <span class="token operator">:=</span> <span class="token string">"root:root@tcp(127.0.0.1:3306)/go_db?charset=utf8mb4&amp;parseTime=True&amp;loc=Local"</span>db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>mysql<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>dsn<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>gorm<span class="token punctuation">.</span>Config<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"连接失败"</span><span class="token punctuation">)</span><span class="token punctuation">}</span>sqlDB<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">DB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 方法结束后执行，关闭连接池</span><span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span>sqlDB <span class="token operator">*</span>sql<span class="token punctuation">.</span>DB<span class="token punctuation">)</span> <span class="token punctuation">{</span>err <span class="token operator">:=</span> sqlDB<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"关闭失败"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span>sqlDB<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 关闭链接</span><span class="token comment" spellcheck="true">// 设置连接池参数</span>sqlDB<span class="token punctuation">.</span><span class="token function">SetMaxIdleConns</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>           <span class="token comment" spellcheck="true">// SetMaxIdleConns 设置空闲连接池中的最大连接数</span>sqlDB<span class="token punctuation">.</span><span class="token function">SetMaxOpenConns</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">// SetMaxOpenConns 设置数据库的最大打开连接数</span>sqlDB<span class="token punctuation">.</span><span class="token function">SetConnMaxLifetime</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Hour<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// SetConnMaxLifetime 设置连接可重用的最大时间量</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GO </tag>
            
            <tag> 后端框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/07/27/hello-world/"/>
      <url>/2023/07/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
